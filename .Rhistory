成績=c(80,60,90,70,50),
stringsAsFactors = FALSE
)
StuDF2
colnames(StuDF2)
names(StuDF2)
colnames(StuDF2) <- c("col1","col2","col3")
colnames(StuDF2)
colnames(StuDF2)[c(2,3)] <- c("姓名","成績")
colnames(StuDF2)
library(stringr)
rownames(StuDF2)
rownames(StuDF2) <- str_c("第",1:5,"筆")
rownames(StuDF2)
a <- c("1","b","TRUE")
a
a[[2]] <- "c" # 元素存在
a[[5]] <- "7" # 元素不存在
a
b <- list(
元素1=1,
元素2="Hello",
元素3=TRUE
)
b[[3]] <- "FALSE" #可用$(名稱)取
b
b[[5]] <- 7
b
names(b)
b[["新元素A"]] <- c(1,2,3)
b$新元素B <- c(T,F,T)
b
names(b)
library(readr)
exData3 <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/exData3.csv",
col_types = cols(
匯率 = col_number(),
期間 = col_character()))
library(lubridate)
names(exData3)
exData3[[1]] <- ymd(exData3[[1]])
class(exData3[[1]])
time1 <- ymd("1997-06-01")
time1
time2 <- ymd("1998-12-01")
time2
isAsiaCrisis <- exData3[[1]] <= time2 & exData3[[1]] >= time1
class(isAsiaCrisis)
isAsiaCrisis
logiAsiaCrisis <- exData3$isAsiaCrisis
exData3[logiAsiaCrisis, ]
exData3[exData3$isAsiaCrisis==T ,]
library(readr)
transcriptDataFinal <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/transcriptDataFinal.csv")
transcriptDataFinal1 <- transcriptDataFinal[transcriptDataFinal[[1]] == "92aS67fee" , ]
transcriptDataFinal1
utility_cobb_douglass <- function(x,y,.alpha,.beta){
utilValue <- x^.alpha*y^.beta # 程序產生output值
return(utilValue) # 傳回output值
}
class(utility_cobb_douglass)
utility_cobb_douglass(1,2,0.5,0.8)
lovefunction <- function(x,.alpha){lovevalue <- x *.alpha
return(lovevalue)}
lovefunction(13,40)
punsloveindex <- lovefunction(0,100)
punsloveindex
supply_fun <- function(a,b,P){
Qs <- a+b*P
return(Qs)}
demand_fun <- function(c,d,P){
Qd <- c-d*P
return(Qd)
}
supply_fun(3,7,2)
demand_fun(6,1,3)
library(readr)
transcriptDataFinal <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/transcriptDataFinal.csv")
studentID <-"92aS67fee"
transcriptDataFinal$學號==studentID -> logiChosenStudent
sum(transcriptDataFinal$學期成績[logiChosenStudent]*
transcriptDataFinal$學分數[logiChosenStudent])/
sum(transcriptDataFinal$學分數[logiChosenStudent]) -> GPA
gpa_fun <- function(studentID){
transcriptDataFinal$學號==studentID -> logiChosenStudent
sum(transcriptDataFinal$學期成績[logiChosenStudent]*
transcriptDataFinal$學分數[logiChosenStudent])/
sum(transcriptDataFinal$學分數[logiChosenStudent]) -> GPA
return(GPA)
}
finStatement[finStatement[16] > 0 ,] -> pro
pro[[5]] -> loss1Companies
class(loss1Companies)
loss1Companies
finStatement[, finStatement[16] > 0 ] -> pro
finStatement[finStatement[16] > 0 , ] -> pro
pro[[5]] -> loss1Companies
class(loss1Companies)
loss1Companies
finStatement[[33]]
# loss2Companies
finStatement[[33]]
# loss2Companies
finStatement[[33]]
# loss2Companies
finStatement[finStatement[[33]] ,]
finStatement[finStatement[[33]] , ]
finStatement[finStatement[[33]] < 0 , ]
# loss2Companies
finStatement[finStatement[[33]] < 0 , ] -> loss
loss[[5]]
# loss2Companies
finStatement[finStatement[[33]] < 0 , ] -> loss
loss[,5]
# loss2Companies
finStatement[finStatement[[33]] < 0 , ] -> loss
loss[,5] -> loss2Companies
loss2Companies
finStatement[finStatement[[33]] < 0 , ] -> loss
loss[,5] -> loss2Companies
class(loss2Companies)
loss2Companies
finStatement[finStatement[[33]] < 0 , ] -> loss
loss[[5]] -> loss2Companies
class(loss2Companies)
loss2Companies
finStatement[finStatement[16] < 0 , ] -> pro
pro[[5]] -> loss1Companies
class(loss1Companies)
loss1Companies
operpro -> finStatement[finStatement[16] > 0 , ]
operpro -> finStatement[finStatement[16] > 0 , ]
library(lubridate); library(stringr); library(purrr); library(readr)
test <- 2+3 # 答案存在指定test物件
test # 最後一行打指定物件名稱
library(readr)
finStatement <- read_csv("http://mopsfin.twse.com.tw/opendata/t187ap06_O_ci.csv")
finStatement[finStatement[16] < 0 , ] -> pro
pro[[5]] -> loss1Companies
class(loss1Companies)
loss1Companies
finStatement[finStatement[[33]] < 0 , ] -> loss
loss[[5]] -> loss2Companies
class(loss2Companies)
loss2Companies
operpro -> finStatement[finStatement[16] > 0 , ]
operpro <- finStatement[finStatement[16] > 0 , ]
# only1LossCompanies
operpro <- finStatement[finStatement[16] > 0 , ]
operpro
# only1LossCompanies
operpro <- finStatement[finStatement[16] > 0 , ]
operpro[[5]] -> operpro
# only1LossCompanies
operpro <- finStatement[finStatement[16] > 0 , ]
operpro[[5]] -> operpro
company1 -> operpro & loss2Companies
operpro <- finStatement[finStatement[16] > 0 , ]
operpro[[5]] -> operprocompany
company1 -> operprocompany & loss2Companies
operpro <- finStatement[finStatement[16] > 0 , ]
operpro[[5]] -> operprocompany
company1 <- operprocompany & loss2Companies
operpro <- finStatement[finStatement[16] > 0 , ]
operpro[[5]] -> operprocompany
as.logical(operprocompany)
as.logical(loss2Companies)
company1 <- operprocompany & loss2Companies
operpro <- finStatement[finStatement[16] > 0 , ]
operpro[[5]] -> operprocompany
as.logical(operprocompany)
as.logical(loss2Companies)
company1 <- operprocompany & loss2Companies
operpro <- finStatement[finStatement[16] > 0 , ]
operpro[[5]] -> operprocompany
operprocompany
as.logical(operprocompany)
as.logical(loss2Companies)
company1 <- operprocompany & loss2Companies
operpro <- finStatement[finStatement[16] > 0 , ]
operpro[[5]] -> operprocompany
operprocompany &loss2Companies
operpro <- finStatement[finStatement[16] > 0 , ]
operpro[[5]] -> operprocompany
as.logical(operprocompany)-> operprocompany
as.logical(loss2Companies) -> loss2Companies
company1 <- operprocompany & loss2Companies
# only1LossCompanies
operpro <- finStatement[finStatement[16] > 0 , ]
operpro[[5]] -> operprocompany
as.logical(operprocompany)-> operprocompany
as.logical(loss2Companies) -> loss2Companies
company1 <- operprocompany & loss2Companies
company1
# only1LossCompanies
operpro <- finStatement[16] > 0
operpro[[5]] -> operprocompany
as.logical(operprocompany)-> operprocompany
as.logical(loss2Companies) -> loss2Companies
company1 <- operprocompany & loss2Companies
company1
# only1LossCompanies
operpro <- finStatement[16] > 0
operpro
operpro[[5]] -> operprocompany
as.logical(operprocompany)-> operprocompany
as.logical(loss2Companies) -> loss2Companies
company1 <- operprocompany & loss2Companies
company1
# only1LossCompanies
operpro <- finStatement[[16]] > 0
operpro
operloss <- finStatement[[16]] < 0
sharepro <- finStatement[[33]] >0
shareloss <- finStatement[[33]] <0
company1 <- operpro & shareloss
company2 <- operloss & sharepro
company3 <- company1 | company2
company3
# only1LossCompanies
operpro <- finStatement[[16]] > 0
operloss <- finStatement[[16]] < 0
sharepro <- finStatement[[33]] >0
shareloss <- finStatement[[33]] <0
company1 <- operpro & shareloss
company2 <- operloss & sharepro
company3 <- company1 | company2
company3
# only1LossCompanies
operpro <- finStatement[[16]] > 0
operloss <- finStatement[[16]] < 0
sharepro <- finStatement[[33]] >0
shareloss <- finStatement[[33]] <0
company1 <- operpro & shareloss
company2 <- operloss & sharepro
company3 <- company1 | company2
company3
finStatement[[5]] == company3
# only1LossCompanies
operpro <- finStatement[[16]] > 0
operloss <- finStatement[[16]] < 0
sharepro <- finStatement[[33]] >0
shareloss <- finStatement[[33]] <0
company1 <- operpro & shareloss
company2 <- operloss & sharepro
company3 <- company1 | company2
company3
finStatement[company3 == T]
operpro <- finStatement[[16]] > 0
operloss <- finStatement[[16]] < 0
sharepro <- finStatement[[33]] >0
shareloss <- finStatement[[33]] <0
company1 <- operpro & shareloss
company2 <- operloss & sharepro
company3 <- company1 | company2
company3
finStatement[company3 == T ,]
# only1LossCompanies
operpro <- finStatement[[16]] > 0
operloss <- finStatement[[16]] < 0
sharepro <- finStatement[[33]] >0
shareloss <- finStatement[[33]] <0
company1 <- operpro & shareloss
company2 <- operloss & sharepro
company3 <- company1 | company2
company3
finStatement[company3 == T ,] -> company4
company4[[5]] -> only1LossCompanies
only1LossCompanies
as.data.frame(only1LossCompanies)
# subsample
as.data.frame(only1LossCompanies) -> subsample
class(subsample)
subsample
library(httr)
exhibitionList <- content(GET("https://cloud.culture.tw/frontsite/trans/SearchShowAction.do?method=doFindTypeJ&category=6"))
str(exhibitionList[[1]])
length(exhibitionList)
# numExhibitions
length(exhibitionList) -> numExhibitions
numExhibitions
names(df_oneShow)
names(exhibitionList) <- c("title","time","location","locationName","price","endTime","sourceWebName")
# df_oneShow
names(exhibitionList) <- c("title","time","location","locationName","price","endTime","sourceWebName")
names(exhibitionList)
# df_oneShow
rownames(exhibitionList) <- c("title","time","location","locationName","price","endTime","sourceWebName")
colnames(exhibitionList) <- c("title","time","location","locationName","price","endTime","sourceWebName")
rownames(exhibitionList) <- c("title","time","location","locationName","price","endTime","sourceWebName")
View(exhibitionList)
View(exhibitionList)
exhibitionList[[1]]
# df_oneShow
names(exhibitionList)
exhibitionList[[1]]
# df_oneShow
names(exhibitionList)
class(exhibitionList)
exhibitionList[[1]]
# df_oneShow
names(exhibitionList)
class(exhibitionList)
# df_oneShow
names(exhibitionList)[1:7]
class(exhibitionList)
# df_oneShow
names(exhibitionList)[1:7] -> names(df_oneShow)
names(exhibitionList)[1:7] -> df_oneShow
class(exhibitionList)
# df_oneShow
names(exhibitionList)[1:7] -> df_oneShow
class(df_oneShow)
# df_oneShow
names(exhibitionList)[1:7] -> df_oneShow
df_oneShow
class(df_oneShow)
# df_oneShow
names(exhibitionList)[1:7] -> ex1
names(df_oneShow) -> ex1
class(df_oneShow)
# df_oneShow
names(exhibitionList)[1:7] -> ex1
names(df_oneShow) -> ex1
class(df_oneShow)
as.data.frame(df_oneShow)
# df_oneShow
names(exhibitionList)[1:7] -> ex1
names(df_oneShow) -> ex1
class(df_oneShow)
as.data.frame(df_oneShow)
df_oneShow
names(exhibitionList[[1]])[1:7] -> ex1
names(df_oneShow) -> ex1
class(df_oneShow)
as.data.frame(df_oneShow)
df_oneShow
dataframe_show_info <- function(exhibitionInput){
df_oneShow <- dataframe_show_info
return(df_oneShow)
}
#  dataframe_show_info
dataframe_show_info <- function(exhibitionInput){
df_oneShow <- dataframe_show_info
return(df_oneShow)
}
dataframe_show_info
library(purrr)
map_dfr(exhibitionList,dataframe_show_info) -> df_allShows
exhibitionList$ sourceWebName == "全國藝文活動資訊系統"
# totalCount
exhibitionList$ sourceWebName == "全國藝文活動資訊系統" -> art
sum(art)
# totalCount
exhibitionList[[1]]$ sourceWebName == "全國藝文活動資訊系統" -> art
sum(art)
# totalCount
exhibitionList[[1]]$ sourceWebName == "全國藝文活動資訊系統" -> art
sum(art)
length(art)
# totalCount
exhibitionList[[1]]$ sourceWebName == "全國藝文活動資訊系統" -> art
sum(art)
# totalCount
exhibitionList[[1]]$ sourceWebName == "全國藝文活動資訊系統" -> art
sum(art) -> totalCount
totalCount
dataframe_show_info <- function(exhibitionInput){
df_oneShow <- exhibitionInput
return(df_oneShow)
}
dataframe_show_info
library(purrr)
map_dfr(exhibitionList,dataframe_show_info) -> df_allShows
dataframe_show_info <- function(exhibitionInput){
df_oneShow <- exhibitionInput
return(df_oneShow)
}
dataframe_show_info
library(purrr)
map_dfr(exhibitionList,dataframe_show_info) -> df_allShows
library(purrr)
map_dfr(exhibitionList,dataframe_show_info) -> df_allShows
as.factor(df_allShows$sourceWebName) -> df_allShows$sourceWebName
library(lubridate); library(stringr); library(purrr); library(readr)
test <- 2+3 # 答案存在指定test物件
test # 最後一行打指定物件名稱
library(readr)
finStatement <- read_csv("http://mopsfin.twse.com.tw/opendata/t187ap06_O_ci.csv")
finStatement[finStatement[16] < 0 , ] -> pro
pro[[5]] -> loss1Companies
class(loss1Companies)
loss1Companies
finStatement[finStatement[[33]] < 0 , ] -> loss
loss[[5]] -> loss2Companies
class(loss2Companies)
loss2Companies
operpro <- finStatement[[16]] > 0
operloss <- finStatement[[16]] < 0
sharepro <- finStatement[[33]] >0
shareloss <- finStatement[[33]] <0
company1 <- operpro & shareloss
company2 <- operloss & sharepro
company3 <- company1 | company2
company3
finStatement[company3 == T ,] -> company4
company4[[5]] -> only1LossCompanies
only1LossCompanies
as.data.frame(only1LossCompanies) -> subsample
class(subsample)
subsample
library(httr)
exhibitionList <- content(GET("https://cloud.culture.tw/frontsite/trans/SearchShowAction.do?method=doFindTypeJ&category=6"))
str(exhibitionList[[1]])
length(exhibitionList) -> numExhibitions
numExhibitions
names(exhibitionList[[1]])[1:7] -> ex1
names(df_oneShow) -> ex1
class(df_oneShow)
as.data.frame(df_oneShow)
df_oneShow
dataframe_show_info <- function(exhibitionInput){
df_oneShow <- exhibitionInput
return(df_oneShow)
}
dataframe_show_info
library(purrr)
map_dfr(exhibitionList,dataframe_show_info) -> df_allShows
dataframe_show_info <- function(exhibitionInput){
df_oneShow <- exhibitionInput
return(df_oneShow)
}
dataframe_show_info
dataframe_show_info(exhibitionList[[5]])
dataframe_show_info <- function(exhibitionInput){
df_oneShow <- exhibitionInput
return(df_oneShow)
}
dataframe_show_info
library(purrr)
map_dfr(exhibitionList,dataframe_show_info) -> df_allShows
library(purrr)
map_dfr(exhibitionList[1:7,dataframe_show_info) -> df_allShows
library(purrr)
map_dfr(exhibitionList[1:7],dataframe_show_info) -> df_allShows
library(purrr)
map_dfr(exhibitionList[[1]],dataframe_show_info) -> df_allShows
library(purrr)
map_dfr(exhibitionList[1],dataframe_show_info) -> df_allShows
library(purrr)
map_dfr(exhibitionList,dataframe_show_info) -> df_allShows
library(purrr)
length(exhibitionList)
map_dfr(exhibitionList,dataframe_show_info) -> df_allShows
library(purrr)
map_dfr(df_oneShow,dataframe_show_info) -> df_allShows
library(purrr)
map_dfr(exhibitionList,dataframe_show_info) -> df_allShows
exhibitionList[[1]]$ sourceWebName == "全國藝文活動資訊系統" -> art
sum(art) -> totalCount
totalCount
exhibitionList[[1]]$ sourceWebName == "全國藝文活動資訊系統" -> art
sum(art) -> totalCount
class(totalCount)
totalCount
exhibitionList[[1]]$ sourceWebName == "全國藝文活動資訊系統" -> art
sum(art) -> totalCount
class(totalCount)
as.numeric(totalCount)
totalCount
exhibitionList$ sourceWebName == "全國藝文活動資訊系統" -> art
sum(art) -> totalCount
class(totalCount)
as.numeric(totalCount)
totalCount
exhibitionList[[1]]$ sourceWebName == "全國藝文活動資訊系統" -> art
sum(art) -> totalCount
class(totalCount)
as.numeric(totalCount)
totalCount
exhibitionList[[1]]$ sourceWebName == "全國藝文活動資訊系統" -> art
exhibitionList[art,]
exhibitionList[exhibitionList[[1]]$ sourceWebName == "全國藝文活動資訊系統", ]
exhibitionList[exhibitionList$ sourceWebName == "全國藝文活動資訊系統", ]
exhibitionList[exhibitionList$ sourceWebName == "全國藝文活動資訊系統", ]
exhibitionList[exhibitionList[1:1545]$ sourceWebName == "全國藝文活動資訊系統", ]
exhibitionList[1][exhibitionList[1]$ sourceWebName == "全國藝文活動資訊系統", ]
exhibitionList[1]$ sourceWebName == "全國藝文活動資訊系統" -> art
sum(art) -> totalCount
class(totalCount)
as.numeric(totalCount)
totalCount
exhibitionList[1]$ sourceWebName == "全國藝文活動資訊系統" -> art
sum(art) -> totalCount
class(totalCount)
as.numeric(totalCount)
totalCount
library(lubridate); library(stringr); library(purrr); library(readr)
test <- 2+3 # 答案存在指定test物件
test # 最後一行打指定物件名稱
library(readr)
finStatement <- read_csv("http://mopsfin.twse.com.tw/opendata/t187ap06_O_ci.csv")
exhibitionList[1]$ sourceWebName == "全國藝文活動資訊系統" -> art
sum(art) -> totalCount
class(totalCount)
as.numeric(totalCount)
totalCount
exhibitionList[[1]] $ sourceWebName == "全國藝文活動資訊系統" -> art
sum(art) -> totalCount
class(totalCount)
as.numeric(totalCount)
totalCount
